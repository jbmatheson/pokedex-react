{"version":3,"file":"static/js/884.be449a7d.chunk.js","mappings":"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","sources":["app/components/DataTableBox/index.tsx","app/components/EvolutionBox/index.tsx","app/components/FlavorTextBox/index.tsx","app/components/SpriteBox/index.tsx","app/components/StatsBox/index.tsx","app/components/PokemonDetails/index.tsx","utils/index.ts"],"sourcesContent":["import { Box, Divider } from '@mui/material'\nimport React, { Fragment } from 'react'\n\nimport { Pokemon } from '../../types/pokemon.types'\nimport get from 'lodash/get'\nimport upperCase from 'lodash/upperCase'\nimport { useTranslation } from 'react-i18next'\n\ninterface DataTableBoxProps {\n  pokemon: Pokemon\n  height: number\n  weight: number\n  abilities: Object[]\n  shape: string\n}\n\nconst DataTableBox: React.FC<DataTableBoxProps> = (props) => {\n  const { pokemon, height, weight, abilities, shape } = props\n  const { t } = useTranslation(['common'])\n  const types = get(pokemon, ['types'])\n\n  return (\n    <Box\n      sx={{\n        margin: { xs: '1rem 1rem 2.5rem', lg: '0 1rem 0 0' },\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        borderRadius: '1rem',\n        width: { xs: 'calc(100% - 2rem)', lg: 'auto' },\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '0.5rem 1rem',\n          alignItems: { xs: 'center', lg: 'flex-end' },\n        }}\n      >\n        <Box sx={{ fontSize: '1.5rem', display: 'flex', fontWeight: 'bold' }}>Data Sheet</Box>\n      </Box>\n      <Divider sx={{ borderColor: 'rgba(0,0,0,.5' }} />\n\n      <Fragment>\n        <Box sx={{ display: 'flex', padding: '1rem', flexDirection: 'row', gap: '3rem' }}>\n          <Box sx={{ display: 'flex', flexDirection: 'column', textAlign: 'left' }}>\n            <Box sx={{ fontSize: '1.125rem', fontWeight: 'bold' }}>{t('common:abilities')}</Box>\n\n            {abilities.map((ability) => {\n              const abilityName = upperCase(get(ability, ['ability', 'name']))\n              return (\n                <Box sx={{ backgroundColor: 'rgba(0,0,0,.5', padding: '0.5rem' }} key={abilityName}>\n                  {abilityName}\n                </Box>\n              )\n            })}\n          </Box>\n\n          <Box sx={{ display: 'flex', flexDirection: 'column', textAlign: 'center' }}>\n            <Box sx={{ fontSize: '1.125rem', fontWeight: 'bold' }}>Type</Box>\n\n            {types.map((item: object) => {\n              const pokemonType = get(item, ['type', 'name'])\n\n              return (\n                <span key={pokemonType} className={pokemonType}>\n                  {pokemonType}\n                </span>\n              )\n            })}\n          </Box>\n\n          <Box sx={{ display: 'flex', flexDirection: 'column', textAlign: 'right' }}>\n            <Box sx={{ fontSize: '1.125rem', fontWeight: 'bold' }}>Shape</Box>\n\n            <div>{shape}</div>\n          </Box>\n        </Box>\n\n        <Box\n          sx={{\n            display: 'flex',\n            padding: '1.95rem 1rem 1rem 1rem',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Box sx={{ display: 'flex', flexDirection: 'column', textAlign: 'left' }}>\n            <Box sx={{ fontSize: '1.125rem', fontWeight: 'bold' }}>{t('common:height')}</Box>\n            <Box sx={{ fontSize: '1rem' }}>{height} m</Box>\n          </Box>\n\n          <Box sx={{ display: 'flex', flexDirection: 'column', textAlign: 'left' }}>\n            <Box sx={{ fontSize: '1.125rem', fontWeight: 'bold' }}>{t('common:weight')}</Box>\n            <Box sx={{ fontSize: '1rem' }}>{weight} Kg</Box>\n          </Box>\n        </Box>\n      </Fragment>\n    </Box>\n  )\n}\n\nexport default DataTableBox\n","import { Box, Divider } from '@mui/material'\n\nimport React from 'react'\nimport RouterLink from '../RouterLink'\nimport capitalize from 'lodash/capitalize'\nimport get from 'lodash/get'\nimport isEmpty from 'lodash/isEmpty'\nimport { useTranslation } from 'react-i18next'\n\ninterface IProps {\n  evolutionChain: Object\n}\n\nconst EvolutionBox: React.FunctionComponent<IProps> = (props) => {\n  const { evolutionChain } = props\n  const { t } = useTranslation(['common'])\n\n  const idRegEx = /[0-9]+/g\n\n  const species = get(evolutionChain, ['chain', 'species', 'name'])\n  const speciesURL = get(evolutionChain, ['chain', 'species', 'url'])\n\n  const speciesID = speciesURL.match(idRegEx)\n\n  const speciesImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${speciesID[1]}.png`\n\n  const evolvesToList = get(evolutionChain, ['chain', 'evolves_to'], [])\n\n  const evolvesToEvolvesToList = evolvesToList.map((evolutions: any) =>\n    get(evolutions, ['evolves_to'])\n  )\n\n  return (\n    <Box\n      sx={{\n        margin: { xs: '1rem 0', lg: '0 1rem' },\n        borderRadius: '1rem',\n        backgroundColor: '#fff',\n        display: 'flex',\n        flexDirection: 'column',\n        alignSelf: { xs: 'center', lg: 'flex-end' },\n        width: { xs: 'calc(100% - 2rem)', lg: 'auto' },\n        flex: { xs: 1, lg: 0 },\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '0.5rem 1rem',\n          alignItems: { xs: 'center', lg: 'flex-end' },\n        }}\n      >\n        <Box sx={{ fontSize: '1.5rem', display: 'flex', fontWeight: 'bold' }}>\n          {t('common:evolution-chain')}\n        </Box>\n\n        <Box sx={{ fontSize: '1rem', display: 'flex' }}>{t('common:click-evolution-chain')}</Box>\n      </Box>\n      <Divider sx={{ borderColor: 'rgba(0,0,0,.5' }} />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          paddingY: '0.5rem',\n          paddingX: '1rem',\n          alignItems: 'center',\n        }}\n      >\n        <RouterLink to={`/pokedex-react/pokemon/${species}/`}>\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              margin: '0.5rem',\n              borderRadius: '1rem',\n              border: '1px solid #555',\n              ':hover': { backgroundColor: 'rgba(0,0,0,.2)' },\n            }}\n          >\n            <Box sx={{ padding: { xs: '0.25rem', lg: '1rem' } }}>\n              <Box component=\"img\" src={speciesImage} />\n              <div>{capitalize(species)}</div>\n            </Box>\n          </Box>\n        </RouterLink>\n        {!isEmpty(evolvesToList) && (\n          <div>\n            {evolvesToList.map((evolution: any) => {\n              const evolutionName = get(evolution, ['species', 'name'])\n              const evolutionURL = get(evolution, ['species', 'url'])\n              const evolutionID = evolutionURL.match(idRegEx)\n              const evolutionImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolutionID[1]}.png`\n\n              return (\n                <RouterLink key={evolutionName} to={`/pokedex-react/pokemon/${evolutionName}/`}>\n                  <Box\n                    sx={{\n                      margin: '0.5rem',\n                      borderRadius: '1rem',\n                      border: '1px solid #555',\n                      ':hover': { backgroundColor: 'rgba(0,0,0,.2)' },\n                      display: 'flex',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <Box sx={{ padding: { xs: '0.25rem', lg: '1rem' } }}>\n                      <Box component=\"img\" src={evolutionImage} />\n                      <div>{capitalize(evolutionName)}</div>\n                    </Box>\n                  </Box>\n                </RouterLink>\n              )\n            })}\n          </div>\n        )}\n        {!isEmpty(evolvesToEvolvesToList[0]) && (\n          <div>\n            {evolvesToEvolvesToList.map((evolutions: any) => {\n              return evolutions.map((evolution: any) => {\n                const evolutionName = get(evolution, ['species', 'name'])\n                const evolutionURL = get(evolution, ['species', 'url'])\n                const evolutionID = evolutionURL.match(idRegEx)\n                const evolutionImage = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolutionID[1]}.png`\n\n                return (\n                  <RouterLink key={evolutionName} to={`/pokedex-react/pokemon/${evolutionName}/`}>\n                    <Box\n                      sx={{\n                        margin: '0.5rem',\n                        borderRadius: '1rem',\n                        border: '1px solid #555',\n                        ':hover': { backgroundColor: 'rgba(0,0,0,.2)' },\n                        display: 'flex',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <Box sx={{ padding: { xs: '0.25rem', lg: '1rem' } }}>\n                        <Box component=\"img\" src={evolutionImage} />\n                        <div>{capitalize(evolutionName)}</div>\n                      </Box>\n                    </Box>\n                  </RouterLink>\n                )\n              })\n            })}\n          </div>\n        )}\n      </Box>\n    </Box>\n  )\n}\n\nexport default EvolutionBox\n","import { Box } from '@mui/material'\nimport React from 'react'\n\ninterface IProps {\n  flavorText: string\n}\n\nconst FlavorTextBox: React.FunctionComponent<IProps> = (props) => {\n  const { flavorText } = props\n\n  return (\n    <Box\n      sx={{\n        fontSize: '1rem',\n        textAlign: 'center',\n        display: 'flex',\n        alignSelf: 'center',\n        fontStyle: 'italic',\n        backgroundColor: 'white',\n        padding: { xs: '4rem 1rem 1rem', lg: '1rem 1rem 1rem' },\n        borderBottomLeftRadius: '1rem',\n        borderBottomRightRadius: '1rem',\n        flexWrap: 'wrap',\n        maxWidth: { lg: '75%' },\n      }}\n    >\n      {flavorText}\n    </Box>\n  )\n}\n\nexport default FlavorTextBox\n","import { Box, Divider, Grid } from '@mui/material'\n\nimport React from 'react'\n\ninterface IProps {\n  id: string | number\n  name: string\n}\n\nexport const SpriteBox: React.FunctionComponent<IProps> = (props) => {\n  const { id, name } = props\n  const [itemIndex, setItemIndex] = React.useState(0)\n\n  const normalSpriteFront = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`\n  const normalSpriteBack = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/${id}.png`\n\n  return (\n    <Box\n      sx={{\n        margin: { xs: '0 1rem', lg: '1rem 1rem 1rem 0' },\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        borderRadius: '1rem',\n        width: { xs: 'calc(100% - 2rem)', lg: 'auto' },\n      }}\n    >\n      <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n        <Box\n          sx={{\n            fontSize: '1.5rem',\n            display: 'flex',\n            alignSelf: { xs: 'center', lg: 'flex-end' },\n            fontWeight: 'bold',\n            padding: '0.5rem 1rem 0 0 ',\n          }}\n        >\n          Sprites\n        </Box>\n\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            paddingX: '1rem',\n          }}\n        >\n          <Box sx={{ fontSize: '1rem', display: 'flex' }}>Front</Box>\n          <Box sx={{ fontSize: '1rem', display: 'flex' }}>Back</Box>\n        </Box>\n      </Box>\n\n      <Divider sx={{ borderColor: 'rgba(0,0,0,.5' }} />\n\n      <Box sx={{ padding: '1.5rem', display: 'flex', justifyContent: 'space-around' }}>\n        <Grid container spacing={2}>\n          <Grid item xs={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n            <Box component=\"img\" src={normalSpriteFront} />\n          </Grid>\n          <Grid item xs={6} sx={{ display: 'flex', justifyContent: 'center' }}>\n            <Box component=\"img\" src={normalSpriteBack} />\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  )\n}\n\nexport default SpriteBox\n","import { Box, Divider, LinearProgress } from '@mui/material'\n\nimport React from 'react'\nimport get from 'lodash/get'\nimport theme from '../../styles/theme'\nimport upperCase from 'lodash/upperCase'\n\ninterface IProps {\n  stats: object[]\n}\n\nexport const StatsBox: React.FunctionComponent<IProps> = (props) => {\n  const { stats } = props\n  return (\n    <Box\n      sx={{\n        margin: { xs: '0', lg: '0 0 1.5rem 1rem' },\n        display: 'flex',\n        flexDirection: 'column',\n        alignSelf: { xs: 'center', lg: 'flex-start' },\n        borderRadius: '1rem',\n        backgroundColor: 'white',\n        width: { xs: 'calc(100% - 2rem)', lg: 'auto' },\n      }}\n    >\n      <Box sx={{ fontSize: '1.5rem', display: 'flex', fontWeight: 'bold', padding: '0.5rem 1rem' }}>\n        Base Stats\n      </Box>\n\n      <Divider sx={{ borderColor: 'rgba(0,0,0,.5' }} />\n\n      <Box sx={{ display: 'flex', padding: '0.5rem', flexDirection: 'column' }}>\n        {stats.map((stat) => {\n          const statName = upperCase(get(stat, ['stat', 'name']))\n          const baseStat = get(stat, ['base_stat'])\n\n          return (\n            <Box\n              key={statName}\n              sx={{\n                margin: '0 1rem',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                paddingY: '0.35rem',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  paddingX: '.5rem',\n                  justifyContent: 'flex-end',\n                  width: '100%',\n                }}\n              >\n                <Box>{statName}</Box>\n              </Box>\n\n              <Box sx={{ position: 'relative', paddingX: '.5rem' }}>\n                <LinearProgress\n                  className=\"progress is-primary\"\n                  value={baseStat}\n                  variant=\"determinate\"\n                  sx={{\n                    minWidth: { xs: '183px', lg: '300px' },\n                    height: '1rem',\n                    borderRadius: '.25rem',\n                  }}\n                />\n                <Box\n                  sx={{\n                    position: 'absolute',\n                    top: '-5px',\n                    bottom: '-7px',\n                    left: `calc(${baseStat}% - 10px)`,\n                    lineHeight: 'normal',\n                    backgroundColor: theme.palette.primary.main,\n                    padding: '0.285rem',\n                    borderRadius: '1rem',\n                    color: 'white',\n                  }}\n                >\n                  {baseStat}\n                </Box>\n              </Box>\n            </Box>\n          )\n        })}\n      </Box>\n    </Box>\n  )\n}\n\nexport default StatsBox\n","import { Box, Button } from '@mui/material'\n\nimport DataTableBox from '../DataTableBox'\nimport EvolutionBox from '../EvolutionBox'\nimport FlavorTextBox from '../FlavorTextBox'\nimport { Pokemon } from '../../types/pokemon.types'\nimport React from 'react'\nimport RouterLink from '../RouterLink'\nimport { SpriteBox } from '../SpriteBox'\nimport StatsBox from '../StatsBox'\nimport capitalize from 'lodash/capitalize'\nimport find from 'lodash/find'\nimport get from 'lodash/get'\nimport { pokemonIDGenerator } from '../../../utils'\nimport upperCase from 'lodash/upperCase'\nimport { useTranslation } from 'react-i18next'\n\ninterface IProps {\n  pokemon: Pokemon\n}\n\nconst PokemonDetails: React.FC<IProps> = (props) => {\n  const { pokemon } = props\n  const { t } = useTranslation(['common'])\n\n  const name = capitalize(get(pokemon, ['name']))\n  const frontDefaultSprite = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${get(\n    pokemon,\n    ['id']\n  )}.png`\n  const image =\n    get(pokemon, ['sprites', 'other', 'official-artwork', 'front_default']) || frontDefaultSprite\n  const id = get(pokemon, ['id'])\n  const pokemonID = pokemonIDGenerator(id)\n  const height = get(pokemon, ['height']) / 10\n  const weight = get(pokemon, ['weight']) / 10\n  const abilities = get(pokemon, ['abilities'])\n  const flavorTextEntries = get(pokemon, ['species', 'flavor_text_entries'])\n  const blueEntry = find(flavorTextEntries, { language: { name: 'en' } })\n  const flavorText = get(blueEntry, ['flavor_text'])\n  const stats = get(pokemon, ['stats'])\n  const shape = upperCase(get(pokemon, ['species', 'shape', 'name']))\n  const isBaby = get(pokemon, ['species', 'is_baby'])\n  const isLegendary = get(pokemon, ['species', 'is_legendary'])\n  const isMythical = get(pokemon, ['species', 'is_mythical'])\n\n  const evolutionChain = get(pokemon, ['species', 'evolution_chain'])\n\n  return (\n    <Box\n      sx={{\n        width: { xs: '100%', lg: 'auto' },\n        maxWidth: '80rem',\n        alignItems: 'center',\n        borderRadius: '1rem',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'rgba(255, 255, 255, 0.5)',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n          width: '100%',\n        }}\n      >\n        <Box\n          sx={{\n            borderTopLeftRadius: '1rem',\n            borderTopRightRadius: '1rem',\n            padding: '0 0 2rem 0',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'relative',\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            sx={{\n              position: 'absolute',\n              left: 0,\n              top: 0,\n              bottom: 0,\n              borderTopRightRadius: 0,\n              borderBottomRightRadius: '1rem',\n              borderBottomLeftRadius: 0,\n              minWidth: '5.3rem',\n              boxShadow: 'none',\n              height: '3rem',\n            }}\n          >\n            <RouterLink to={`/pokedex-react/`}>\n              <Box sx={{ color: 'white' }}>Back</Box>\n            </RouterLink>\n          </Button>\n\n          <FlavorTextBox flavorText={flavorText} />\n\n          {(isBaby || isLegendary || isMythical) && (\n            <Box\n              sx={{\n                position: 'absolute',\n                top: 0,\n                right: 0,\n                backgroundColor: 'red',\n                borderBottomLeftRadius: '1rem',\n                color: 'white',\n                padding: '0.75rem',\n              }}\n            >\n              {isBaby ? t('common:baby') : ''}\n              {isLegendary ? t('common:legendary') : ''}\n              {isMythical ? t('common:mythical') : ''}\n            </Box>\n          )}\n        </Box>\n\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: { xs: 'column', lg: 'row' },\n            justifyContent: 'space-between',\n            alighItems: 'flex-start',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexDirection: 'column',\n              width: { xs: '100%', lg: 'auto' },\n            }}\n          >\n            <Box sx={{ fontSize: '2.5rem', fontWeight: 'bold' }}>\n              {name} #{Number(pokemonID)}\n            </Box>\n            <Box sx={{ height: '425px', padding: '0 1.5rem 1.5rem 1rem' }}>\n              <Box\n                component=\"img\"\n                alt={name}\n                src={image}\n                sx={{ objectFit: 'contain', height: '100%', width: '100%' }}\n              />\n            </Box>\n\n            <StatsBox stats={stats} />\n          </Box>\n\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: { xs: 'center', lg: 'flex-end' },\n            }}\n          >\n            <EvolutionBox evolutionChain={evolutionChain} />\n            <SpriteBox id={id} name={name} />\n\n            <DataTableBox\n              height={height}\n              weight={weight}\n              abilities={abilities}\n              shape={shape}\n              pokemon={pokemon}\n            />\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default PokemonDetails\n","// Pokemon ID Generator\nexport const pokemonIDGenerator = (id: number) => {\n  const idString = `${id}`\n\n  const filler = '000'\n\n  return filler.substring(0, filler.length - idString.length) + idString\n}\n\n// Handle HTTP Errors\nexport const handleErrors = (err: any) => {\n  let errorMessage = {}\n\n  if (err.response) {\n    // The request was made and the server responded with a status code\n    if (err.response.status === 400) {\n      errorMessage = {\n        message: 'bad-request',\n        status: 400,\n      }\n    } else if (err.response.status === 401) {\n      errorMessage = {\n        message: 'unauthorized',\n        status: 401,\n      }\n    } else if (err.response.status === 403) {\n      errorMessage = {\n        message: 'forbidden',\n        status: 403,\n      }\n    } else if (err.response.status === 404) {\n      errorMessage = {\n        message: 'not-found',\n        status: 404,\n      }\n    } else if (err.response.status === 405) {\n      errorMessage = {\n        message: 'method-not-allowed',\n        status: 405,\n      }\n    } else if (err.response.status === 500) {\n      errorMessage = {\n        message: 'internal-server-error',\n        status: 500,\n      }\n    } else {\n      errorMessage = {\n        message: 'something-went-wrong',\n        status: 500,\n      }\n    }\n  } else {\n    errorMessage = {\n      message: 'something-went-wrong',\n      status: 500,\n    }\n  }\n\n  return errorMessage\n}\n"],"names":["props","pokemon","height","weight","abilities","shape","t","useTranslation","types","get","_jsxs","Box","sx","margin","xs","lg","display","flexDirection","backgroundColor","borderRadius","width","children","_jsx","padding","alignItems","fontSize","fontWeight","Divider","borderColor","Fragment","gap","textAlign","map","ability","abilityName","upperCase","item","pokemonType","className","justifyContent","evolutionChain","idRegEx","species","speciesID","match","speciesImage","concat","evolvesToList","evolvesToEvolvesToList","evolutions","alignSelf","flex","paddingY","paddingX","RouterLink","to","border","component","src","capitalize","isEmpty","evolution","evolutionName","evolutionID","evolutionImage","flavorText","fontStyle","borderBottomLeftRadius","borderBottomRightRadius","flexWrap","maxWidth","SpriteBox","id","name","itemIndex","setItemIndex","React","normalSpriteFront","normalSpriteBack","Grid","container","spacing","stats","stat","statName","baseStat","position","LinearProgress","value","variant","minWidth","top","bottom","left","lineHeight","theme","palette","primary","main","color","frontDefaultSprite","image","pokemonID","pokemonIDGenerator","flavorTextEntries","blueEntry","find","language","isBaby","isLegendary","isMythical","borderTopLeftRadius","borderTopRightRadius","Button","boxShadow","FlavorTextBox","right","alighItems","Number","alt","objectFit","StatsBox","EvolutionBox","DataTableBox","idString","substring","filler","length"],"sourceRoot":""}