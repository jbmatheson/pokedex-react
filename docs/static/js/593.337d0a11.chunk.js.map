{"version":3,"file":"static/js/593.337d0a11.chunk.js","mappings":"iLASA,MA6BA,EA7B8CA,IAAkB,IAAjB,QAAEC,GAASD,EACxD,MAAOE,EAAMC,GAAWC,EAAAA,UAAe,IACjC,EAAEC,IAAMC,EAAAA,EAAAA,IAAe,CAAC,YACvBC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAM3BC,EAAcA,CAACC,EAAsCC,KAC1C,cAAXA,GAIJT,GAAQ,EAAM,EAEhB,OACEU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGR,IACCM,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CAACd,KAAMA,EAAMe,iBAAkB,IAAMC,QAASR,EAAYK,UACjEF,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAACD,QAASR,EAAaU,SAAS,QAAQC,GAAI,CAAEC,MAAO,QAASP,SACjEV,EAAE,iBAADkB,OAAkBtB,SAIzB,C","sources":["app/components/ErrorToast/index.tsx"],"sourcesContent":["import { Alert, Snackbar } from '@mui/material'\nimport React, { useState } from 'react'\n\nimport { useTranslation } from 'react-i18next'\n\ninterface ErrorToastProps {\n  message: string\n}\n\nconst ErrorToast: React.FC<ErrorToastProps> = ({ message }) => {\n  const [open, setOpen] = React.useState(true)\n  const { t } = useTranslation(['common'])\n  const [show, setShow] = useState(true)\n\n  const handleClick = () => {\n    setOpen(true)\n  }\n\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setOpen(false)\n  }\n  return (\n    <>\n      {show && (\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n            {t(`common:errors.${message}`)}\n          </Alert>\n        </Snackbar>\n      )}\n    </>\n  )\n}\n\nexport default ErrorToast\n"],"names":["_ref","message","open","setOpen","React","t","useTranslation","show","setShow","useState","handleClose","event","reason","_jsx","_Fragment","children","Snackbar","autoHideDuration","onClose","Alert","severity","sx","width","concat"],"sourceRoot":""}