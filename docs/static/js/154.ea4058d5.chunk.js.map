{"version":3,"file":"static/js/154.ea4058d5.chunk.js","mappings":"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","sources":["app/components/ResultBox/index.tsx","utils/index.ts","../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_asciiToArray.js","../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseSlice.js","../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_castSlice.js","../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_createCaseFirst.js","../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hasUnicode.js","../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stringToArray.js","../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_unicodeToArray.js","../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/capitalize.js","../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/upperFirst.js"],"sourcesContent":["import { Box } from '@mui/material'\nimport { ISearchResult } from '../../types/pokedex.types'\nimport React from 'react'\nimport RouterLink from '../RouterLink'\nimport capitalize from 'lodash/capitalize'\nimport get from 'lodash/get'\nimport { pokemonIDGenerator } from '../../../utils'\nimport { useTranslation } from 'react-i18next'\n\ninterface IProps {\n  results: ISearchResult[]\n  searching: boolean\n}\n\nconst ResultBox: React.FunctionComponent<IProps> = (props) => {\n  const { results, searching } = props\n  const { t } = useTranslation(['common'])\n\n  return (\n    // <Box padding={3} column={12}>\n    <Box>\n      {results.length ? (\n        <>\n          {results.map((pokemon: any) => {\n            const pokemonID = pokemonIDGenerator(get(pokemon, ['id']))\n            const pokemonName = get(pokemon, ['name'])\n            return (\n              <Box\n                key={pokemonID}\n                // borderStyle=\"sm\"\n                // rounding={2}\n                // margin={1}\n                // flex=\"grow\"\n              >\n                <RouterLink to={`/pokemon/${pokemonName}/`} hoverStyle=\"none\">\n                  <Box padding={2} alignItems=\"center\" display=\"flex\">\n                    <Box paddingX={2}>\n                      {/* <Avatar\n                        name={pokemonName}\n                        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`}\n                        size=\"xs\"\n                      /> */}\n                    </Box>\n                    <Box paddingX={2} flex=\"grow\">\n                      {/* <Text color=\"darkGray\" weight=\"bold\"> */}\n                      <div>{capitalize(pokemonName)}</div>\n                      {/* <Text size=\"sm\" color=\"gray\"> */}\n                      <div>{`#${pokemonID}`}</div>\n                    </Box>\n                  </Box>\n                </RouterLink>\n              </Box>\n            )\n          })}\n        </>\n      ) : (\n        !searching && <div>{t('common:errors:no-records-found')}</div>\n      )}\n      {/* <Spinner accessibilityLabel={t('common:loading')} show={searching} /> */}\n    </Box>\n  )\n}\n\nexport default ResultBox\n","// Pokemon ID Generator\nexport const pokemonIDGenerator = (id: number) => {\n  const idString = `${id}`\n\n  const filler = '000'\n\n  return filler.substring(0, filler.length - idString.length) + idString\n}\n\n// Handle HTTP Errors\nexport const handleErrors = (err: any) => {\n  let errorMessage = {}\n\n  if (err.response) {\n    // The request was made and the server responded with a status code\n    if (err.response.status === 400) {\n      errorMessage = {\n        message: 'bad-request',\n        status: 400,\n      }\n    } else if (err.response.status === 401) {\n      errorMessage = {\n        message: 'unauthorized',\n        status: 401,\n      }\n    } else if (err.response.status === 403) {\n      errorMessage = {\n        message: 'forbidden',\n        status: 403,\n      }\n    } else if (err.response.status === 404) {\n      errorMessage = {\n        message: 'not-found',\n        status: 404,\n      }\n    } else if (err.response.status === 405) {\n      errorMessage = {\n        message: 'method-not-allowed',\n        status: 405,\n      }\n    } else if (err.response.status === 500) {\n      errorMessage = {\n        message: 'internal-server-error',\n        status: 500,\n      }\n    } else {\n      errorMessage = {\n        message: 'something-went-wrong',\n        status: 500,\n      }\n    }\n  } else {\n    errorMessage = {\n      message: 'something-went-wrong',\n      status: 500,\n    }\n  }\n\n  return errorMessage\n}\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n"],"names":["props","results","searching","t","useTranslation","_jsx","Box","children","length","_Fragment","map","pokemon","pokemonID","pokemonIDGenerator","get","pokemonName","RouterLink","to","concat","hoverStyle","_jsxs","padding","alignItems","display","paddingX","flex","capitalize","id","idString","substring","filler","module","exports","string","split","array","start","end","index","result","Array","baseSlice","require","undefined","castSlice","hasUnicode","stringToArray","toString","methodName","strSymbols","chr","charAt","trailing","join","slice","reHasUnicode","RegExp","test","asciiToArray","unicodeToArray","rsAstralRange","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","upperFirst","toLowerCase","createCaseFirst"],"sourceRoot":""}