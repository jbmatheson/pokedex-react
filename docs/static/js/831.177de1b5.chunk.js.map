{"version":3,"file":"static/js/831.177de1b5.chunk.js","mappings":"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","sources":["app/pages/PokemonPage/index.tsx","app/actions/pokemon.action.ts"],"sourcesContent":["import {\n  FETCH_POKEMON_ERROR,\n  FETCH_POKEMON_REQUEST,\n  FETCH_POKEMON_SUCCESS,\n} from '../../constants/pokemon.constants'\nimport React, { Fragment, Suspense, lazy, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Box } from '@mui/material'\nimport { RootState } from '../../reducers'\nimport Spinner from 'react-spinner'\nimport { fetchPokemonAction } from '../../actions/pokemon.action'\nimport isEmpty from 'lodash/isEmpty'\nimport { useParams } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\n// Lazy Load\nconst PokemonDetails = lazy(() => import('../../components/PokemonDetails'))\nconst ErrorToast = lazy(() => import('../../components/ErrorToast'))\n\nconst PokemonPage: React.FunctionComponent = () => {\n  const { t } = useTranslation(['common'])\n  const dispatch = useDispatch()\n  const { slug } = useParams<{ slug: string }>()\n\n  const { pokemon, error, loading } = useSelector((state: RootState) => ({\n    pokemon: state.pokemon.pokemon,\n    error: state.pokemon.error,\n    loading: state.pokemon.loading,\n  }))\n\n  const handleFetch = useCallback(() => {\n    if (!slug) return\n\n    dispatch({\n      type: FETCH_POKEMON_REQUEST,\n    })\n\n    fetchPokemonAction(slug)\n      .then((res) => {\n        dispatch({\n          type: FETCH_POKEMON_SUCCESS,\n          payload: res,\n        })\n      })\n      .catch((err) => {\n        console.error(err)\n\n        dispatch({\n          type: FETCH_POKEMON_ERROR,\n          payload: 'Oops! Something went wrong. Please try again later.',\n        })\n      })\n  }, [dispatch, slug])\n\n  useEffect(() => {\n    handleFetch()\n  }, [handleFetch])\n\n  return (\n    <Fragment>\n      <Box sx={{ padding: { xs: '0', lg: '1rem' }, display: 'flex', justifyContent: 'center' }}>\n        {error && !loading && (\n          <Suspense\n            fallback={\n              <Box\n                sx={{\n                  position: 'fixed',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                }}\n              >\n                <Spinner />\n              </Box>\n            }\n          >\n            <ErrorToast message={error} />\n          </Suspense>\n        )}\n\n        {!isEmpty(pokemon) && (\n          <Suspense\n            fallback={\n              <Box\n                sx={{\n                  position: 'fixed',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                }}\n              >\n                <Spinner />\n              </Box>\n            }\n          >\n            <PokemonDetails pokemon={pokemon} />\n          </Suspense>\n        )}\n\n        {loading && (\n          <Box\n            sx={{\n              height: '80vh',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              flexDirection: 'column',\n            }}\n          >\n            <Spinner />\n          </Box>\n        )}\n      </Box>\n    </Fragment>\n  )\n}\n\nexport default PokemonPage\n","import axios, { AxiosError, AxiosResponse } from 'axios'\n\nimport { Pokemon } from '../types/pokemon.types'\nimport get from 'lodash/get'\n\nexport const fetchPokemonAction: (p: string) => Promise<any> = (p) => {\n  return new Promise((resolve, reject) => {\n    const url = `https://pokeapi.co/api/v2/pokemon/${p.toString().toLowerCase()}`\n\n    axios\n      .get(url)\n      .then((response: AxiosResponse) => {\n        const pokemon = get(response, ['data'])\n\n        const speciesURL = get(pokemon, ['species', 'url'])\n\n        axios\n          .get(speciesURL)\n          .then((res: AxiosResponse) => {\n            const species = get(res, ['data'])\n            const evolutionChainURL = get(species, ['evolution_chain', 'url'])\n\n            axios\n              .get(evolutionChainURL)\n              .then((r: AxiosResponse) => {\n                const evolutionChain = get(r, ['data'])\n\n                const speciesData = {\n                  ...species,\n                  evolution_chain: evolutionChain,\n                }\n\n                const payload: Pokemon = { ...pokemon, species: speciesData }\n\n                resolve(payload)\n              })\n              .catch((e: AxiosError) => {\n                if (e.response) {\n                  // The request was made and the server responded with a status code\n                  // that falls out of the range of 2xx\n                  console.log(e.response.data)\n                  console.log(e.response.status)\n                  console.log(e.response.headers)\n                } else if (e.request) {\n                  // The request was made but no response was received\n                  // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                  // http.ClientRequest in node.js\n                  console.log(e.request)\n                } else {\n                  // Something happened in setting up the request that triggered an Error\n                  console.log('Error', e.message)\n                }\n                console.log(e.config)\n\n                reject(e)\n              })\n          })\n          .catch((err: AxiosError) => {\n            if (err.response) {\n              // The request was made and the server responded with a status code\n              // that falls out of the range of 2xx\n              console.log(err.response.data)\n              console.log(err.response.status)\n              console.log(err.response.headers)\n            } else if (err.request) {\n              // The request was made but no response was received\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n              // http.ClientRequest in node.js\n              console.log(err.request)\n            } else {\n              // Something happened in setting up the request that triggered an Error\n              console.log('Error', err.message)\n            }\n            console.log(err.config)\n\n            reject(err)\n          })\n      })\n      .catch((error: AxiosError) => {\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data)\n          console.log(error.response.status)\n          console.log(error.response.headers)\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request)\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message)\n        }\n        console.log(error.config)\n\n        reject(error)\n      })\n  })\n}\n"],"names":["PokemonDetails","lazy","ErrorToast","PokemonPage","t","useTranslation","dispatch","useDispatch","slug","useParams","pokemon","error","loading","useSelector","state","handleFetch","useCallback","p","type","FETCH_POKEMON_REQUEST","Promise","resolve","reject","url","concat","toString","toLowerCase","axios","get","then","response","speciesURL","res","species","evolutionChainURL","r","evolutionChain","speciesData","evolution_chain","payload","catch","e","console","log","data","status","headers","request","message","config","err","FETCH_POKEMON_SUCCESS","FETCH_POKEMON_ERROR","useEffect","_jsx","Fragment","children","_jsxs","Box","sx","padding","xs","lg","display","justifyContent","Suspense","fallback","position","alignItems","top","left","right","bottom","Spinner","isEmpty","height","flexDirection"],"sourceRoot":""}